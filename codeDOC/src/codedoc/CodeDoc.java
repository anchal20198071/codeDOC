/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codedoc;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.text.Caret;
import javax.swing.text.Document;

/**
 *
 * @author lenovo
 */
public class CodeDoc extends javax.swing.JFrame {
    PrintWriter out;
    BufferedReader in;
    private Document model;
    private transient Caret caret;
    /**
     * Creates new form CodeDoc
     */
    public CodeDoc() {
        try {
            out=new PrintWriter(LoginWindow.soc.getOutputStream(),true);
            in = new BufferedReader(new InputStreamReader(LoginWindow.soc.getInputStream()));
        }  
        catch (IOException ex) {
            Logger.getLogger(CodeDoc.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        buttonSettings();
        button.setText("+");
        jtp.addTab("", null);
        jtp.setTabComponentAt(0, button);
        PrivateChatPanel pc= new PrivateChatPanel();
        jtp.addTab("Chat", pc);
        jtp.addTab("CodeDoc", new NewJPanel());
        this.add(jtp);
        
        Thread privateChatThread = new Thread(new Runnable() {
            @Override
            public void run() {
                try {
                    while(true){
                        String combinedText = in.readLine();
                        System.out.println("Received");
                        try {
                            combinedText= EncryptDecrypt.decrypt(combinedText);
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(null, "Exception in Decryption: "+ex);
                        }
                        
                        String text= combinedText.replaceAll("~", "\n");
                        int len= pc.ta().getText().length();
                        pc.ta().setCaretPosition(len);
                        pc.ta().append(text);
                    }
                }
                catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Exception in Decryption: "+ex);
                }
            }
        });
        privateChatThread.start();
    }
                

    public void buttonSettings(){
        button.setBorder(null);
        button.setFocusPainted(false);
        button.setContentAreaFilled(false);
        button.setPreferredSize(new Dimension(30, 30));
        button.setToolTipText("New Tab");
    }
    
    public Document getDocument() {
        return model;
    }
    
    public void setCaretPosition(int position) {
        Document doc = getDocument();
        if (doc != null) {
            if (position > doc.getLength() || position < 0) {
                throw new IllegalArgumentException("bad position: " + position);
            }
            caret.setDot(position);
        }
    }
    public void moveCaretPosition(int pos) {
        Document doc = getDocument();
        if (doc != null) {
            if (pos > doc.getLength() || pos < 0) {
                throw new IllegalArgumentException("bad position: " + pos);
            }
            caret.moveDot(pos);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button = new javax.swing.JButton();
        jtp = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        button.setText("+");
        button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonActionPerformed(evt);
            }
        });

        jtp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtpMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtp)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(1406, Short.MAX_VALUE)
                .addComponent(button)
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(button)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtp, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonActionPerformed
        //String tabName= JOptionPane.showInputDialog("Enter Tab Name :");
        //if(tabName != null){
            jtp.addTab("New Tab", new NewJPanel());
            this.add(jtp);
        //}
    }//GEN-LAST:event_buttonActionPerformed

    private void jtpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtpMouseClicked
        if(SwingUtilities.isRightMouseButton(evt)){
            int index= jtp.getSelectedIndex();
            if(index != 0){
                JPopupMenu popupMenu= new JPopupMenu();
                JMenuItem delete= new JMenuItem("Delete Tab");
                delete.addActionListener(new ActionListener(){
                    @Override
                    public void actionPerformed(ActionEvent evt) {
                        jtp.remove(index);
                    }

                });
                popupMenu.add(delete);
                popupMenu.show(this, evt.getX(), evt.getY()+40);
            }
        }
    }//GEN-LAST:event_jtpMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CodeDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CodeDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CodeDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CodeDoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CodeDoc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button;
    private javax.swing.JTabbedPane jtp;
    // End of variables declaration//GEN-END:variables
}
